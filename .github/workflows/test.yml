name: CI

on: [push]

jobs:
  test_proxy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: [3.8]
    services:
      postgres:
        image: postgres:10
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: dev
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      rabbitmq:
        image: rabbitmq
        ports:
          - 5672/tcp
      memcached:
        image: memcached
        ports:
          - 11211/tcp
      arangodb:
        image: arangodb/arangodb
        ports:
          - 8529/tcp
        env:
          ARANGO_ROOT_PASSWORD: mango
    steps:
    - name: Setup Python ${{ matrix.python_version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python_version }}
    - name: Fetch LoansBot/web-backend
      uses: actions/checkout@v2
      with:
        path: ./web-backend
    - name: Fetch LoansBot/logging
      uses: actions/checkout@v2
      with:
        repository: LoansBot/logging
        path: ./logging
    - name: Fetch LoansBot/shared
      uses: actions/checkout@v2
      with:
        repository: LoansBot/shared
        path: ./shared
    - name: Building working directory
      run: |
        mkdir ./working
        mv ./web-backend/src ./working/src
        mv ./web-backend/tests ./working/tests
        mv ./web-backend/scripts ./working/scripts
        mv ./web-backend/cfg ./working/cfg
        mv ./logging/src/lblogging ./working/src/lblogging
        mv ./shared/src/lbshared ./working/src/lbshared
    - name: Generic python setup
      run: |
        python -m pip install --upgrade pip
    - name: Installing logging dependencies
      run: |
        python -m pip install -r ./logging/requirements.txt
    - name: Installing shared dependencies
      run: |
        python -m pip install -r ./shared/requirements.txt
    - name: Installing our dependencies
      run: |
        python -m pip install -r ./web-backend/requirements.txt
    - name: Lint with flake8
      working-directory: ./working
      run: |
        flake8 . --count --select=E9,F63,F7,F82,F841,E302,E303,F401,E261 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Fetch LoansBot/database
      uses: actions/checkout@v2
      with:
        repository: LoansBot/database
        path: ./database
    - name: Setup database dependencies
      run: |
        sudo apt update
        sudo apt install -yqq build-essential libcurl4-gnutls-dev libxml2-dev libssl-dev postgresql-common libpq-dev postgresql-client
        python -m pip install -r ./database/requirements.txt
    - name: Initialize database
      working-directory: ./database/src
      run: |
        python run_migrations.py
      env:
        DATABASE_HOST: localhost
        DATABASE_PORT: ${{ job.services.postgres.ports['5432'] }}
        DATABASE_USER: postgres
        DATABASE_PASSWORD: dev
        DATABASE_DBNAME: postgres
    - name: Initialize arango
      working-directory: ./working/src
      run: |
        python init_arango.py
      env:
        PGHOST: localhost
        PGPORT: ${{ job.services.postgres.ports['5432'] }}
        PGDATABASE: postgres
        PGUSER: postgres
        PGPASSWORD: dev
        ARANGO_CLUSTER: http://localhost:${{ job.services.arangodb.ports['8529'] }}
        ARANGO_AUTH: jwt
        ARANGO_AUTH_CACHE: disk
        ARANGO_AUTH_USERNAME: root
        ARANGO_AUTH_PASSWORD: mango
        ARANGO_TTL_SECONDS: 3600
        ARANGO_DB: test
    - name: Boot up server
      working-directory: ./working/src
      run: |
        python -m pip install supervisor
        supervisord -c ../cfg/supervisor.conf
        supervisorctl start all
        supervisorctl status all
      env:
        APPNAME: web-backend
        WEB_CONCURRENCY: 2
        PGHOST: localhost
        PGPORT: ${{ job.services.postgres.ports['5432'] }}
        PGDATABASE: postgres
        PGUSER: postgres
        PGPASSWORD: dev
        AMQP_HOST: localhost
        AMQP_PORT: ${{ job.services.rabbitmq.ports['5672'] }}
        AMQP_USERNAME: guest
        AMQP_PASSWORD: guest
        AMQP_VHOST: /
        AMQP_REDDIT_PROXY_QUEUE: rproxy
        MEMCACHED_HOST: localhost
        MEMCACHED_PORT: ${{ job.services.memcached.ports[11211] }}
        PYTHON_ARGS: -u
        WEBHOST: localhost
        WEBPORT: 8000
        UVICORN_PATH: uvicorn
        APP_VERSION_NUMBER: 1
        ROOT_DOMAIN: http://localhost:8000
        RATELIMIT_DISABLED: 1
        HUMAN_PASSWORD_ITERS: 10
        HCAPTCHA_DISABLED: 1
        HCAPTCHA_SECRET_KEY: 0
        ARANGO_CLUSTER: http://localhost:${{ job.services.arangodb.ports['8529'] }}
        ARANGO_AUTH: jwt
        ARANGO_AUTH_CACHE: disk
        ARANGO_AUTH_USERNAME: root
        ARANGO_AUTH_PASSWORD: mango
        ARANGO_TTL_SECONDS: 3600
        ARANGO_DB: test
    - name: Run integration tests
      working-directory: ./working/tests
      run: |
        python -m unittest discover -s integration
      env:
        PGHOST: localhost
        PGPORT: ${{ job.services.postgres.ports['5432'] }}
        PGDATABASE: postgres
        PGUSER: postgres
        PGPASSWORD: dev
        TEST_WEB_HOST: http://localhost:8000
    - name: Shutdown server
      if: always()
      run: |
        supervisorctl stop all
        echo "Program log 1:"
        cat working/src/program-0.log
        echo "Program log 2:"
        cat working/src/program-1.log
        echo "Supervisord log:"
        cat working/src/supervisord.log
        echo "Supervisord pid:"
        cat working/src/supervisord.pid
    - name: Get database logs
      if: always()
      working-directory: working/src
      run: |
        python -m lblogging.query
      env:
        PGHOST: localhost
        PGPORT: ${{ job.services.postgres.ports['5432'] }}
        PGDATABASE: postgres
        PGUSER: postgres
        PGPASSWORD: dev
